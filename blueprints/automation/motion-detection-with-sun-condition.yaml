blueprint:
  name: Motion-activated Light with sun condition and optional illuminance and night condition 
  description: Turn on a light when motion is detected and time is after sunset (use of an offset is possible).<br />
    When the optional illuminance sensor is set, lights will turn on when illuminance is below the threshold <br />
    At night time, the lights will dimm to brightness of 5 and when night ends initializing with 180
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: false
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 120
      selector:
        number:
          min: 0.0
          max: 3600.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    transition_time:
      name: Transition time
      description: Time in seconds the light fades out
      default: 1
      selector:
        number:
          min: 0.0
          max: 30.0
          unit_of_measurement: seconds
          mode: box
          step: 0.5
    sunset_offset:
      name: Offset to turn on lights
      description: Define offset to sunset
      default: "-00:30:00"
      selector:
        text:
    sunrise_offset:
      name: Offset to turn off lights
      description: Define offset to sunrise
      default: "00:45:00"
      selector:
        text:
    illuminance_sensor:
      name: Illuminance Sensor (optional)
      default:
      selector:
        entity:
          domain: sensor
          device_class: illuminance
          multiple: false
    illuminance_threshold:
      name: Illuminance threshold
      description: Illuminance value in lux. If sensor value is below this value the lights are turned on
      default: 10
      selector:
        number:
          min: 0
          max: 300
          unit_of_measurement: lx
          mode: box
          step: 1
    brightness_day:
      name: Brightness day
      description: brightness during daytime
      default: 180
      selector:
        number:
          min: 0
          max: 255
          mode: slider
          step: 1
    night_time:
      name: 'Nighttime'
      description: 'Sensor that tells it is night time'
      default:
      selector:
        entity:
          domain: 
            - binary_sensor
            - input_boolean
  source_url: https://community.home-assistant.io/t/turn-light-on-and-off-based-on-detected-motion-with-sun-condition/266013
mode: restart
max_exceeded: silent
variables:
  light_target: !input 'light_target'
  illuminance_sensor: !input 'illuminance_sensor'
  illuminance_threshold: !input 'illuminance_threshold'
  brightness_day: !input 'brightness_day'
  night_time: !input 'night_time'
trigger:
  platform: state
  entity_id: !input motion_entity
  from: 'off'
  to: 'on'
condition:
- condition: or
  conditions:
  - condition: sun
    after: sunset
    after_offset: !input sunset_offset
  - condition: sun
    before: sunrise
    before_offset: !input sunrise_offset
  - condition: template
    value_template: "{{ illuminance_sensor != none and states(illuminance_sensor)|float(0) < illuminance_threshold }}"
action:
- service: light.turn_on
  target: "{{ light_target }}"
- wait_template: "{{ state_attr(light_target.entity_id,'brightness') != None }}"
  continue_on_timeout: false
- if:
    - condition: template
      value_template: "{{ night_time != none and is_state(night_time, 'off') and state_attr(light_target.entity_id,'brightness') < 10 }}"
  then:
    - service: light.turn_on
      target: "{{ light_target }}"
      data:
        brightness: "{{ brightness_day }}"
- if:
    - condition: template
      value_template: "{{ night_time != none and is_state(night_time, 'on') and state_attr(light_target.entity_id,'brightness') > 10 }}"
  then:
    - service: light.turn_on
      target: "{{ light_target }}"
      data:
        brightness: 5
- wait_for_trigger:
    platform: state
    entity_id: !input motion_entity
    from: 'on'
    to: 'off'
- delay: !input no_motion_wait
- service: light.turn_off
  target: "{{ light_target }}"
  data:
      transition: !input transition_time
