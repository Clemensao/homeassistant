###############################################################################
#   @author         :   Clemens Hesse
#   @date           :   21.03.2024
#   @package        :   Smart Heater
#   @description    :   Govee Smart Heater 
#   @original       :   
###############################################################################

rest_command:
  rest_govee_appliance:
    url: https://developer-api.govee.com/v1/appliance/devices/control
    method: PUT
    headers:
        Content-Type: application/json
        Govee-API-Key: !secret govee_api_key
    content_type:  'application/json; charset=utf-8'
    payload: '{"device": "{{ device }}","model": "{{ model }}","cmd": {"name": "{{ cmd_name }}","value": "{{ cmd_value }}"}}'
    verify_ssl: true

  govee_device_control:
    url: https://openapi.api.govee.com/router/api/v1/device/control
    headers:
      Content-Type: application/json
      Govee-API-Key: !secret govee_api_key
    payload: '{"requestId": "uuid","payload":{ "sku": "{{ model }}", "device": "{{ device }}","capability": { "type": "{{ type }}","instance": "{{ instance }}","value": {{ value }}}}}'
    method: POST
    verify_ssl: false

sensor:
  - platform: rest
    name: smart_heater_govee_state
    icon: mdi:hvac
    resource: 'https://openapi.api.govee.com/router/api/v1/device/state'
    headers:
      Content-Type: application/json
      Govee-API-Key: !secret govee_api_key
    payload: '{"requestId": "uuid","payload":{ "sku": "H713C","device": "2D:EF:D4:AD:FC:85:65:EB"}}'
    method: POST
    verify_ssl: false
    value_template: >
      {% set capabilities = value_json.payload.capabilities %}
      {% set online_capability = capabilities | selectattr('type', 'eq', 'devices.capabilities.online') | first %}
      {% if online_capability.state.value == true %}
        {% set on_off_capability = capabilities | selectattr('type', 'eq', 'devices.capabilities.on_off') | first %}
        {{ on_off_capability.state.value }}
      {% else %}
        unavailable
      {% endif %}
  #  attributes:
  #    mode: >
  #      {% set capabilities = value_json.payload.capabilities %}
  #      {% set workmode_capability = capabilities | selectattr('type', 'eq', 'devices.capabilities.work_mode') | first %}
  #      {{ on_off_capability.state.value }}


input_select:
  smart_heater_mode:
    name: Smart Heater Mode
    options:
      - Low
      - Medium
      - High
      - Fan
      - Auto
    initial: Low
    icon: mdi:fan 

script:
  govee_smart_heater_control:
    alias: Govee Smart Heater Control
    sequence:
    - if:
      - condition: template
        value_template: '{{  states(state_input) != ''unavailable'' }}'
      then:
      - service: rest_command.rest_govee_appliance
        data:
          device: '{{ device }}'
          model: '{{ model }}'
          cmd_name: '{{ cmd_name }}'
          cmd_value: '{{ cmd_value }}'
        enabled: true
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
      - if:
        - condition: template
          value_template: '{{  cmd_name == ''turn'' }}'
        then:
        - service: python_script.set_state
          data:
            entity_id: '{{ state_input }}'
            state: '{{  1 if cmd_value == ''on'' else 0 }}'
        else:
        - if:
          - condition: template
            value_template: '{{  cmd_name == ''mode'' }}'
          then:
          - service: input_select.select_option
            target:
              entity_id: '{{ mode_input }}'
            data:
              option: '{% set mapper = { 1: ''Low'', 2: ''Medium'', 3: ''High'', 4:
                ''Fan'', 5: ''Auto''} %} {{ mapper[cmd_value] }}

                '
            enabled: true
          - service: python_script.set_state
            data:
              entity_id: '{{ state_input }}'
              state: 1
    mode: single
    icon: mdi:hvac


fan:
  platform: template
  fans:
    smart_space_heater:
      friendly_name: "HeizlÃ¼fter"
      value_template: "{{ states('sensor.smart_heater_govee_state') == '1' }}"
      availability_template: "{{ states('sensor.smart_heater_govee_state') != 'unavailable' }}"
      preset_mode_template: "{{ states('input_select.smart_heater_mode') }}"
      turn_on:
        service: script.govee_smart_heater_control
        data:
          device: "2D:EF:D4:AD:FC:85:65:EB"
          model: "H713C"
          cmd_name: "turn"
          cmd_value: "on"
          state_input: sensor.smart_heater_govee_state
      turn_off:
        service: script.govee_smart_heater_control
        data:
          device: "2D:EF:D4:AD:FC:85:65:EB"
          model: "H713C"
          cmd_name: "turn"
          cmd_value: "off"
          state_input: sensor.smart_heater_govee_state
      set_preset_mode:
        service: script.govee_smart_heater_control
        data:
          device: "2D:EF:D4:AD:FC:85:65:EB"
          model: "H713C"
          cmd_name: "mode"
          cmd_value: >
            {% set mapper = {'Low': 1, 'Medium': 2, 'High': 3, 'Fan': 4, 'Auto': 5} %}
            {{ mapper[preset_mode] }}
          state_input: sensor.smart_heater_govee_state
          mode_input: input_select.smart_heater_mode
      speed_count: 5
      preset_modes:
        - 'Low'
        - 'Medium'
        - 'High'
        - 'Fan'
        - 'Auto'